/*
    
Copyright (c) 2013 Centre for Water Systems,
                   University of Exeter

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

// Change the given dst buffer  into  water level using the water depth and elevation.

CA_FUNCTION makeWL(CA_GRID grid, CA_CELLBUFF_REAL_IO DST,
		   CA_CELLBUFF_REAL_I WD, CA_CELLBUFF_REAL_I ELV, CA_CELLBUFF_STATE_I MASK)
{
  // Initialise the grid	
  CA_GRID_INIT(grid);		

  // Read Mask.
  CA_STATE mask  = caReadCellBuffState(grid,MASK,0);

  // Read bit 0  (false the main cell has nodata)
  CA_STATE bit0  = caReadBitsState(mask,0,1);

  // If the main cell has no data 
  // then do nothing.
  if(bit0 == 0)
    return;

  // Retrive the value of the elevation
  CA_REAL  elv  = caReadCellBuffReal(grid,ELV,0);

  // Retrive the value of the water depth.
  CA_REAL  wd  = caReadCellBuffReal(grid,WD,0);

  // Add the sum of elv+wd into destination.
  caWriteCellBuffReal(grid,DST,elv+wd);
}
